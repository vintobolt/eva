basePath: /api/v1/
definitions:
  handler.APIError:
    properties:
      message:
        type: string
      path:
        type: string
      status:
        type: integer
      timestamp:
        type: integer
    type: object
  models.SignUp:
    properties:
      fullname:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.User:
    properties:
      active:
        type: boolean
      fullname:
        type: string
      login:
        type: string
      passwd:
        type: string
      role:
        type: string
    type: object
host: 127.0.0.1:8089
info:
  contact:
    email: vintobolt@protonmail.com
    name: vintobolt
    url: vintobolt
  description: EVA API documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger EVA API
  version: "0.1"
paths:
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user item
      parameters:
      - description: mediaType
        enum:
        - json
        in: query
        name: mediaType
        type: string
      - description: New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.SignUp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SignUp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      summary: Create an inactive user
      tags:
      - users
  /users/{login}:
    get:
      consumes:
      - application/json
      description: Get a user item
      parameters:
      - description: mediaType
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
swagger: "2.0"
